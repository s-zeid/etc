#!/usr/bin/env cmdtree
# vim: set fdm=marker ft=sh:

# Get cmdtree  #{{{1
#/*
set -ex; bin="$HOME/bin"
which git >/dev/null 2>&1 || (sudo apt update && sudo apt -y install git)
[ -d "$bin" ] || git clone 'https://gitlab.com/scottywz/bin.git' "$bin"
exec "$bin/cmdtree" "$0" "$@"
#*/


# Dependencies for setup  #{{{1

$ if ! which sudo >/dev/null 2>&1; then
$  su -c 'apt update && apt install sudo'
$ fi


# Constants  #{{{1

$ DEBIAN_CODENAME=$(grep '^VERSION_CODENAME=' /etc/os-release
   | head -n 1 | sed -e "s/^[^=]*=//g; s/[\"']//g")
$ DEBIAN_VERSION=$(cat /etc/debian_version | cut -d . -f 1)

#%if grep -q -e 'raspbian' /etc/apt/sources.list
#% define RASPBIAN
#%fi

#%if grep -q -e 'Raspberry Pi' /proc/device-tree/model 2>/dev/null
#% define RPI
#%fi


# Sources  #{{{1

# Boilerplate  #{{{2

$ sudo mkdir -p
/etc/apt/,
 preferences.d
 sources.list.d
 trusted.gpg.d


# Debian contrib/non-free  #{{{2

#%if !%RASPBIAN
$ sudo sed -i -e
  '/https:\/\/deb\.debian\.org\/[^ ]*/ s/ main.*/ main contrib non-free/g'
  /etc/apt/sources.list  # Raspbian already has contrib and non-free
#%endif


# Enable source repositories  #{{{2

$$ sudo sed -i -e \
$$  's/^#deb-src[[:blank:]]/deb-src[[:blank:]]/g' \
$$  /etc/apt/sources.list
$ if ! (grep -q -e '^deb-src[[:blank:]]' /etc/apt/sources.list); then
$  grep '^deb[[:blank:]]' /etc/apt/sources.list | head -n 1
   | sed -e 's/^deb[[:blank:]]/deb-src /g'
   | sudo tee -a /etc/apt/sources.list
$ fi

# Kubic containers  #{{{2

#%if grep -q -e raspbian /etc/apt/sources.list && [ x"$(uname -m)" = x"armv7l" ]
$  obs_kubic_distro="Raspbian_$DEBIAN_VERSION"
#%else
$  obs_kubic_distro="Debian_$DEBIAN_VERSION"
#%fi

$ sudo tee "/etc/apt/sources.list.d/obs-devel-kubic-libcontainers.list" >/dev/null <<EOF
$$ deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$obs_kubic_distro/ /
$$
EOF

$ if ! [ -f "/etc/apt/trusted.gpg.d/obs-devel-kubic-libcontainers.$obs_kubic_distro.asc" ]; then
$  wget -nv "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/$obs_kubic_distro/Release.key" -O- | sudo tee "/etc/apt/trusted.gpg.d/obs-devel-kubic-libcontainers.$obs_kubic_distro.asc" >/dev/null
$ fi


# ZeroTier  #{{{2

$ sudo tee "/etc/apt/sources.list.d/zerotier.list" >/dev/null <<EOF
$$ deb https://download.zerotier.com/debian/$DEBIAN_CODENAME $DEBIAN_CODENAME main
$$
EOF

$ if ! [ -f "/etc/apt/trusted.gpg.d/zerotier.asc" ]; then
$  sudo tee "/etc/apt/trusted.gpg.d/zerotier.asc" >/dev/null <<'EOF'
$$ -----BEGIN PGP PUBLIC KEY BLOCK-----
$$ Comment: GPGTools - https://gpgtools.org
$$ 
$$ mQINBFdQq7oBEADEVhyRiaL8dEjMPlI/idO8tA7adjhfvejxrJ3Axxi9YIuIKhWU
$$ 5hNjDjZAiV9iSCMfJN3TjC3EDA+7nFyU6nDKeAMkXPbaPk7ti+Tb1nA4TJsBfBlm
$$ CC14aGWLItpp8sI00FUzorxLWRmU4kOkrRUJCq2kAMzbYWmHs0hHkWmvj8gGu6mJ
$$ WU3sDIjvdsm3hlgtqr9grPEnj+gA7xetGs3oIfp6YDKymGAV49HZmVAvSeoqfL1p
$$ pEKlNQ1aO9uNfHLdx6+4pS1miyo7D1s7ru2IcqhTDhg40cHTL/VldC3d8vXRFLIi
$$ Uo2tFZ6J1jyQP5c1K4rTpw3UNVne3ob7uCME+T1+ePeuM5Y/cpcCvAhJhO0rrlr0
$$ dP3lOKrVdZg4qhtFAspC85ivcuxWNWnfTOBrgnvxCA1fmBX+MLNUEDsuu55LBNQT
$$ 5+WyrSchSlsczq+9EdomILhixUflDCShHs+Efvh7li6Pg56fwjEfj9DJYFhRvEvQ
$$ 7GZ7xtysFzx4AYD4/g5kCDsMTbc9W4Jv+JrMt3JsXt2zqwI0P4R1cIAu0J6OZ4Xa
$$ dJ7Ci1WisQuJRcCUtBTUxcYAClNGeors5Nhl4zDrNIM7zIJp+GfPYdWKVSuW10mC
$$ r3OS9QctMSeVPX/KE85TexeRtmyd4zUdio49+WKgoBhM8Z9MpTaafn2OPQARAQAB
$$ tFBaZXJvVGllciwgSW5jLiAoWmVyb1RpZXIgU3VwcG9ydCBhbmQgUmVsZWFzZSBT
$$ aWduaW5nIEtleSkgPGNvbnRhY3RAemVyb3RpZXIuY29tPokCNwQTAQoAIQUCV1Cr
$$ ugIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRAWVxmII+UqYViGEACnC3+3
$$ lRzfv7f7JLWo23FSHjlF3IiWfYd+47BLDx706SDih1H6Qt8CqRy706bWbtictEJ/
$$ xTaWgTEDzY/lRalYO5NAFTgK9h2zBP1t8zdEA/rmtVPOWOzd6jr0q3l3pKQTeMF0
$$ 6g+uaMDG1OkBz6MCwdg9counz6oa8OHK76tXNIBEnGOPBW375z1O+ExyddQOHDcS
$$ IIsUlFmtIL1yBa7Q5NSfLofPLfS0/o2FItn0riSaAh866nXHynQemjTrqkUxf5On
$$ 65RLM+AJQaEkX17vDlsSljHrtYLKrhEueqeq50e89c2Ya4ucmSVeC9lrSqfyvGOO
$$ P3aT/hrmeE9XBf7a9vozq7XhtViEC/ZSd1/z/oeypv4QYenfw8CtXP5bW1mKNK/M
$$ 8xnrnYwo9BUMclX2ZAvu1rTyiUvGre9fEGfhlS0rjmCgYfMgBZ+R/bFGiNdn6gAd
$$ PSY/8fP8KFZl0xUzh2EnWe/bptoZ67CKkDbVZnfWtuKA0Ui7anitkjZiv+6wanv4
$$ +5A3k/H3D4JofIjRNgx/gdVPhJfWjAoutIgGeIWrkfcAP9EpsR5swyc4KuE6kJ/Y
$$ wXXVDQiju0xE1EdNx/S1UOeq0EHhOFqazuu00ojATekUPWenNjPWIjBYQ0Ag4ycL
$$ KU558PFLzqYaHphdWYgxfGR+XSgzVTN1r7lW87kCDQRXUKu6ARAA2wWOywNMzEiP
$$ ZK6CqLYGZqrpfx+drOxSowwfwjP3odcK8shR/3sxOmYVqZi0XVZtb9aJVz578rNb
$$ e4Vfugql1Yt6w3V84z/mtfj6ZbTOOU5yAGZQixm6fkXAnpG5Eer/C8Aw8dH1EreP
$$ Na1gIVcUzlpg2Ql23qjr5LqvGtUB4BqJSF4X8efNi/y0hj/GaivUMqCF6+Vvh3GG
$$ fhvzhgBPku/5wK2XwBL9BELqaQ/tWOXuztMw0xFH/De75IH3LIvQYCuv1pnM4hJL
$$ XYnpAGAWfmFtmXNnPVon6g542Z6c0G/qi657xA5vr6OSSbazDJXNiHXhgBYEzRrH
$$ napcohTQwFKEA3Q4iftrsTDX/eZVTrO9x6qKxwoBVTGwSE52InWAxkkcnZM6tkfV
$$ n7Ukc0oixZ6E70Svls27zFgaWbUFJQ6JFoC6h+5AYbaga6DwKCYOP3AR+q0ZkcH/
$$ oJIdvKuhF9zDZbQhd76b4gK3YXnMpVsj9sQ9P23gh61RkAQ1HIlGOBrHS/XYcvpk
$$ DcfIlJXKC3V1ggrG+BpKu46kiiYmRR1/yM0EXH2n99XhLNSxxFxxWhjyw8RcR6iG
$$ ovDxWAULW+bJHjaNJdgb8Kab7j2nT2odUjUHMP42uLJgvS5LgRn39IvtzjoScAqg
$$ 8I817m8yLU/91D2f5qmJIwFI6ELwImkAEQEAAYkCHwQYAQoACQUCV1CrugIbDAAK
$$ CRAWVxmII+UqYWSSEACxaR/hhr8xUIXkIV52BeD+2BOS8FNOi0aM67L4fEVplrsV
$$ Op9fvAnUNmoiQo+RFdUdaD2Rpq+yUjQHHbj92mlk6Cmaon46wU+5bAWGYpV1Uf+o
$$ wbKw1Xv83Uj9uHo7zv9WDtOUXUiTe/S792icTfRYrKbwkfI8iCltgNhTQNX0lFX/
$$ Sr2y1/dGCTCMEuA/ClqGKCm9lIYdu+4z32V9VXTSX85DsUjLOCO/hl9SHaelJgmi
$$ IJzRY1XLbNDK4IH5eWtbaprkTNIGt00QhsnM5w+rn1tO80giSxXFpKBE+/pAx8PQ
$$ RdVFzxHtTUGMCkZcgOJolk8y+DJWtX8fP+3a4Vq11a3qKJ19VXk3qnuC1aeW7OQF
$$ j6ISyHsNNsnBw5BRaS5tdrpLXw6Z7TKr1eq+FylmoOK0pIw5xOdRmSVoFm4lVcI5
$$ e5EwB7IIRF00IFqrXe8dCT0oDT9RXc6CNh6GIs9D9YKwDPRD/NKQlYoegfa13Jz7
$$ S3RIXtOXudT1+A1kaBpGKnpXOYD3w7jW2l0zAd6a53AAGy4SnL1ac4cml76NIWiF
$$ m2KYzvMJZBk5dAtFa0SgLK4fg8X6Ygoo9E0JsXxSrW9I1JVfo6Ia//YOBMtt4XuN
$$ Awqahjkq87yxOYYTnJmr2OZtQuFboymfMhNqj3G2DYmZ/ZIXXPgwHx0fnd3R0Q==
$$ =JgAv
$$ -----END PGP PUBLIC KEY BLOCK-----
$$
EOF
$ fi


# deb-multimedia  #{{{2

$ sudo tee "/etc/apt/sources.list.d/deb-multimedia.list" >/dev/null <<'EOF'
$$ deb https://www.deb-multimedia.org stable main non-free
$$ deb-src https://www.deb-multimedia.org stable main non-free
$$ deb https://www.deb-multimedia.org stable-backports main
$$ deb-src https://www.deb-multimedia.org stable-backports main
$$
EOF

$ sudo tee "/etc/apt/preferences.d/99-deb-multimedia" >/dev/null <<'EOF'
$$ Package: *
$$ Pin: origin www.deb-multimedia.org
$$ Pin-Priority: 1
$$ 
$$ Package: mpv
$$ Pin: release a=stable-backports, origin www.deb-multimedia.org
$$ Pin-Priority: 900
$$
EOF

$ if ! dpkg -l deb-multimedia-keyring >/dev/null 2>&1; then
$  sudo apt update -oAcquire::AllowInsecureRepositories=true
$  sudo apt install deb-multimedia-keyring
$ fi


# Disable automatic updates  #{{{1

$ sudo systemctl stop
apt-daily.timer
apt-daily.service
apt-daily-upgrade.timer
apt-daily-upgrade.service

$ sudo systemctl mask
apt-daily.timer
apt-daily.service
apt-daily-upgrade.timer
apt-daily-upgrade.service


$ sudo apt update  #{{{1


# Upgrade and install packages  #{{{1

$ sudo sh -c 'opts=$1; shift; set -ex; apt upgrade $opts && apt install $opts "$@"' -- \
$ '-t stable-backports --auto-remove --no-install-recommends'

# All environments  #{{{2

# Command line utils
acl
attr
bc
bsdmainutils
byobu
dateutils
expect
faketime
file
fonttools
git
hdparm
jq
lsof
ncdu
openssl
poppler-utils
pv
rename
renameutils
rsync
sl
smartmontools
sqlite3
tmux
units
uuid-runtime
vim
zsh

# Filesystems
btrfs-progs
dosfstools
e2fsprogs
exfat-,
 fuse
 utils
genisoimage
ntfs-3g
squashfs-tools

# Archival/compression
dmg2img
hfsplus
lzip
p7zip,-
 full
unar
unshield
zip
zstd

# Containers
buildah
debootstrap
proot
runc
skopeo

# QEMU
qemu-,
 user-static
 utils

# Android tools
adb
fastboot

# Miscellaneous
manpages-posix  # non-free:  POSIX man pages (section 1p) limit modifications; see:
                # * <https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=234205#15>
                # * <http://lists.debian.org/debian-legal/2004/06/msg00173.html>
                #     * <https://lists.debian.org/debian-legal/2004/06/msg00176.html>
                #     * <https://lists.debian.org/debian-legal/2004/06/msg00182.html>

# Development
autoconf
automake
binutils
intltool
libtool
pkg-config

# Languages
python2
python-setuptools
python3,-
 astral
 dateutil
 lz4
 ntplib
 pil
 pip
 setproctitle
 toml
 tz
 wheel
 yaml
2to3
mypy
nodejs
npm
rustc

# Media
exiftran
exiv2
ffmpeg
imagemagick
jpegoptim
libopencv-dev
optipng

# Networking
curl
dnsmasq
dnsutils
firewalld
libmbim-utils
libqmi-utils
modemmanager,-
 doc
ncat
network-manager
socat
wget
whois
zerotier-one  # non-free but source available (BUSL-1.1; change license: Apache-2.0)


# GUI environments  #{{{2
#%if %GUI

# Libraries
libarchive-dev  # for mpv

# Language libraries
python3-,
 pil.imagetk
 tk
 xlib

# Media
alsa-utils
gstreamer1.0-plugins-,
 base
 good
 bad
 ugly
mpv

# Networking
firewall-config

# Utilities
gucharmap
xdg-utils

# X.org utilities
scrot
x11-,
 apps
 xserver-utils
 utils
xclip
xdotool
xinput
xsel

# Fonts
fonts-,
 croscore
 crosextra-,
  caladea
  carlito
 noto-,
  cjk
  core
  extra
  ui-core
  ui-extra
  unhinted
 roboto
 ubuntu  # non-free (DFSG section 4; see <https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=603157#30>)

#%endif


# Raspberry Pi  #{{{2
#%if %RPI

# Not in Debian stable
singularity-container

# Networking
bluez-,
 test-scripts
 tools
hostapd

# X.org base
xserver-xorg
lightdm
unclutter
dbus-x11
cwm
"$([ $DEBIAN_VERSION -ge 11 ] && echo picom || echo compton)"

# Media
pulseaudio,-
 module-zeroconf
swh-plugins

# GUI apps
epiphany-browser
omxplayer

#%endif


# Manual packages  #{{{1

$ LOCAL_FONTS=/usr/local/share/fonts

# pyftfeatfreeze  #{{{2
$ sudo pip3 install -U opentype-feature-freezer


# Inter fonts  #{{{2
#%if %GUI
$ sudo mkdir -p "$LOCAL_FONTS/inter" && cd "$LOCAL_FONTS/inter"
$ sudo tee Makefile >/dev/null <<'EOF'
$$ MAKEFILE := $(lastword ${MAKEFILE_LIST})
$$ 
$$ all:
$$ 	@set -ex && trap 'rm -rf /dev/shm/inter.zip ./new' EXIT INT QUIT TERM && \
$$ 	 curl -L "$$(make -s -f "${MAKEFILE}" url)" -o /dev/shm/inter.zip && \
$$ 	 rm -rf new && mkdir new && \
$$ 	 unzip -d new /dev/shm/inter.zip && find new/"Inter Hinted"*/Desktop -type f \
$$ 	  -exec sh -c 'mv "$$1" "$$1".disabled' -- {} \; && \
$$ 	 rm -rf ./'Inter '* ./*.txt && mv new/* .
$$ 
$$ url:
$$ 	@set -ex && repo=rsms/inter; tag=latest; contains='.zip' && \
$$ 	curl -f "https://api.github.com/repos/$$repo/releases/$$tag" \
$$ 	 | jq -r --arg contains "$$contains" \
$$ 	    '.assets[].browser_download_url | select(. | contains($$contains))' \
$$ 	 | head -n 1
$$ 
EOF
$ sudo make
$ cd -
$ 
$ sudo mkdir -p "$LOCAL_FONTS/inter-custom" && cd "$LOCAL_FONTS/inter-custom"
$ sudo tee Makefile >/dev/null <<'EOF'
$$ src := ../inter/Inter Desktop
$$ 
$$ all:
$$ 	@set -ex && trap 'rm -rf ./new' EXIT INT QUIT TERM && \
$$ 	 rm -rf new && mkdir new && \
$$  	 (for i in $$(cd "${src}" && ls *.otf); do \
$$ 	  pyftfeatfreeze \
$$  	   -f 'cpsp,tnum,ss01,ss04' \
$$  	   -S -U 'Custom' \
$$  	   "${src}/$$i" "new/$$(printf '%s\n' "$$i" | sed -e 's/Inter/InterCustom/g')" \
$$  	   || exit; \
$$  	 done) && \
$$ 	 rm -f ./*.otf && mv new/* .
$$ 
EOF
$ sudo make
$ cd -
#%endif


# Source Code Pro fonts  #{{{2

#%if %GUI
$ sudo mkdir -p "$LOCAL_FONTS/source-code-pro" && cd "$LOCAL_FONTS/source-code-pro"
$ curl -L "$(~/bin/gh-release-url 'adobe-fonts/source-code-pro' latest 'OTF-')"
  -o "/dev/shm/source-code-pro.zip"
$ sudo unzip -j "/dev/shm/source-code-pro.zip" -x '__MACOSX/*' && rm -f "/dev/shm/source-code-pro.zip"
$ cd -
#%endif


# TwemojiMozilla.ttf  #{{{2

#%if %GUI
$ sudo mkdir -p "$LOCAL_FONTS"
$ sudo curl -L "$(~/bin/gh-release-url 'mozilla/twemoji-colr' latest '.ttf')"
  -o "$LOCAL_FONTS/TwemojiMozilla.ttf"
#%endif


# Configuration  #{{{1

# fontconfig - Exclude files ending in `.disabled`  #{{{2
#%if %GUI
$ sudo mkdir -p '/etc/fonts/conf.d'
$ sudo tee '/etc/fonts/conf.d/9970-exclude-disabled.conf' >/dev/null <<'EOF'
$$ <?xml version="1.0"?>
$$ <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
$$ <fontconfig>
$$  <description>Exclude files ending in `.disabled`</description>
$$  <selectfont>
$$   <rejectfont>
$$    <glob>*.disabled</glob>
$$   </rejectfont>
$$  </selectfont>
$$ </fontconfig>
$$ 
EOF
#%endif


# fontconfig - Fix Ubuntu Light #{{{2
#%if %GUI
$ sudo mkdir -p '/etc/fonts/conf.d'
$ sudo tee '/etc/fonts/conf.d/9980-ubuntu-light.conf' >/dev/null <<'EOF'
$$ <?xml version="1.0"?>
$$ <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
$$ <fontconfig>
$$  <description>Allow Ubuntu Light to be selected as its own font family</description>
$$  <match target="pattern">
$$   <test name="family">
$$    <string>Ubuntu Light</string>
$$   </test>
$$   <edit name="family" binding="same">
$$    <string>Ubuntu</string>
$$   </edit>
$$   <edit name="weight" binding="same">
$$    <const>light</const>
$$   </edit>
$$  </match>
$$  <match target="pattern">
$$   <test name="family">
$$    <string>Ubuntu Light Italic</string>
$$   </test>
$$   <edit name="family" binding="same">
$$    <string>Ubuntu</string>
$$   </edit>
$$   <edit name="weight" binding="same">
$$    <const>light</const>
$$   </edit>
$$   <edit name="slant" binding="same">
$$    <const>italic</const>
$$   </edit>
$$  </match>
$$ </fontconfig>
$$ 
EOF
#%endif


# pulseaudio - Raspberry Pi configuration  #{{{2
#%if %RPI
$ if [ -f /etc/pulse/default.pa ]; then
$  sudo sed -i -e \
$   '/^load-module module-udev-detect\( .*\)\?$/ { s/\stsched=[^ ]*//g;s/$/ tsched=0/g }' \
$   /etc/pulse/default.pa
$ fi
#%endif


# vim - minimal color scheme adjustments for root  #{{{2
$ sudo tee '/root/.vimrc' >/dev/null <<'EOF'
$$ syntax on
$$ hi FoldColumn  cterm=NONE ctermbg=NONE guibg=NONE guifg=fg
$$ hi Folded      ctermfg=Blue ctermbg=242 guifg=#aaaaff guibg=#6c6c6c
$$ hi LineNr      ctermfg=130 guifg=#c0795f
$$ hi Visual      ctermbg=242 guibg=#6c6c6c
$$ 
$$ runtime /root/.vimrc.local
$$ 
EOF


# zerotier-one - TimeoutStopSec=5  #{{{2
$ sudo mkdir -p '/etc/systemd/system/zerotier-one.service.d'
$ sudo tee '/etc/systemd/system/zerotier-one.service.d/override.conf' > /dev/null <<'EOF'
$$ [Service]
$$ TimeoutStopSec=5
$$
EOF
$ sudo systemctl daemon-reload


# Extra addresses script  #{{{1

$ if [ -d "/etc/NetworkManager" ]; then
$  sudo mkdir -p "/etc/NetworkManager/dispatcher.d/up.d"
$  sudo tee "/etc/NetworkManager/dispatcher.d/up.d/addresses" >/dev/null <<'EOF'
$$ #!/bin/sh
$$ export IFACE="$1"
$$ exec /etc/network/if-up.d/addresses
$$
EOF
$  sudo chmod +x "/etc/NetworkManager/dispatcher.d/up.d/addresses"
$ fi

$ sudo mkdir -p "/etc/network/if-up.d"
$ sudo tee "/etc/network/if-up.d/addresses" >/dev/null <<'EOF'
$$ #!/bin/sh
$$ 
$$ ADDRESSES='
$$  eth0=2001:db8::2 eth0=2001:db8:2::1
$$  eth0=192.0.2.2 eth0=198.51.100.2 eth0=203.0.113.2 eth0=233.252.0.2
$$ '
$$ 
$$ ################################################################################
$$ 
$$ set -e
$$ 
$$ EXAMPLE_PREFIXES=''
$$ EXAMPLE_PREFIXES="$EXAMPLE_PREFIXES"'^2001:0\?[dD][bB]8:'
$$ EXAMPLE_PREFIXES="$EXAMPLE_PREFIXES"'\|192\.0\?0\?0\.0\?0\?2\.'
$$ EXAMPLE_PREFIXES="$EXAMPLE_PREFIXES"'\|198\.0\?51\.100\.'
$$ EXAMPLE_PREFIXES="$EXAMPLE_PREFIXES"'\|203\.0\?0\?0\.113\.'
$$ EXAMPLE_PREFIXES="$EXAMPLE_PREFIXES"'\|233\.252\.0\?0\?0\.'
$$ 
$$ for spec in $ADDRESSES; do
$$  if (printf '%s\n' "$spec" | grep -q -e '='); then
$$   interface=${spec%%=*}
$$   address=${spec#*=}
$$   if [ x"$IFACE" = x"$interface" ]; then
$$    if ! (printf '%s\n' "$address" | grep -q -e "$EXAMPLE_PREFIXES"); then
$$     /sbin/ip addr add dev "$interface" "$address" || true
$$    fi
$$   fi
$$  fi
$$ done
$$ 
$$ exit 0
$$
EOF
$ sudo chmod +x "/etc/network/if-up.d/addresses"


$ sudo apt build-dep  #{{{1

# Dummy item
build-essential

#%if false
##%if %GUI
ffmpeg
mpv
#%endif


$ sudo python2 -m easy_install -U  #{{{1

'mutagen<1.44.0'
'PyYAML<5.5.0'  # <https://github.com/yaml/pyyaml/issues/476>


$ pip3 install --user -U  #{{{1

awscli


# Install user config files  #{{{1

$ [ -d ~/etc ] && true || git clone https://gitlab.com/scottywz/etc.git ~/etc
$ (cd ~/etc && make install)


# Set default shell  #{{{1

$ old_shell=$(cut -d: -f3,7 /etc/passwd | grep -e "^$(id -u):" | cut -d: -f2)
$ new_shell=/bin/zsh
$ if ! awk -v string="$old_shell" -v ends_with="$new_shell" \
$  'BEGIN { exit index(string, ends_with) != (length(string) - length(ends_with) + 1) }'
$ then
$  chsh -s "$new_shell"
$ fi
